DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS items CASCADE;
DROP TABLE IF EXISTS bookings CASCADE;
DROP TABLE IF EXISTS requests CASCADE;
DROP TABLE IF EXISTS comments CASCADE;


CREATE TABLE IF NOT EXISTS users (
                          id bigint PRIMARY KEY generated by default as identity,
                          name varchar(255),
                          email varchar(512),
                          constraint UQ_ESER_EMAIL UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS items (
                         id bigint PRIMARY KEY generated by default as identity,
                         name varchar(30) not null,
                         description varchar(255),
                         is_available boolean,
                         owner_id int,
                         request_id int
);

CREATE TABLE IF NOT EXISTS bookings (
                            id bigint PRIMARY KEY generated by default as identity,
                            start_date timestamp not null,
                            end_date timestamp not null,
                            item_id int,
                            booker_id int,
                            status int
);

CREATE TABLE IF NOT EXISTS requests (
                            id bigint PRIMARY KEY generated by default as identity,
                            description varchar(100),
                            requestor_id int
);

CREATE TABLE IF NOT EXISTS comments (
                            id bigint PRIMARY KEY generated by default as identity,
                            text varchar,
                            item_id int,
                            author_id int,
                            created timestamp
);

ALTER TABLE bookings ADD FOREIGN KEY (item_id) REFERENCES items (id);

ALTER TABLE bookings ADD FOREIGN KEY (booker_id) REFERENCES users (id);

ALTER TABLE requests ADD FOREIGN KEY (requestor_id) REFERENCES users (id);

ALTER TABLE comments ADD FOREIGN KEY (author_id) REFERENCES users (id);

ALTER TABLE comments ADD FOREIGN KEY (item_id) REFERENCES items (id);

ALTER TABLE items ADD FOREIGN KEY (owner_id) REFERENCES users (id);
